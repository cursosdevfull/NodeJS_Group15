version: "3.8"

services:
  mysql-server:
    image: mysql:8
    container_name: nodejs15-mysql-server
    ports:
      - "4500:3306"
    restart: unless-stopped
    environment:
      MYSQL_USER: sergio
      MYSQL_PASSWORD: 12345
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: cursodb
    volumes:
      - vol-nodejs15-mysql:/var/lib/mysql
    networks:
      - nodejs15-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 8s

  mysql-client:
    image: phpmyadmin
    container_name: nodejs15-mysql-client
    environment:
      PMA_ARBITRARY: 1
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - nodejs15-mysql-network
    depends_on:
      mysql-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 8s

  redis-server:
    image: redis:6.0.5-alpine
    container_name: nodejs15-redis-server
    command: redis-server --requirepass todovale
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - nodejs15-mysql-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_interval: 5s

  redis-client:
    image: rediscommander/redis-commander:latest
    container_name: nodejs15-redis-client
    restart: unless-stopped
    environment:
      REDIS_HOST: redis-server
      REDIS_PORT: 6379
      REDIS_PASSWORD: todovale
    ports:
      - "8081:8081"
    networks:
      - nodejs15-mysql-network
    depends_on:
      redis-server:
        condition: service_healthy

  sonarqube:
    image: sonarqube:8-community
    container_name: nodejs15-sonarqube
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9092:9092"
    networks:
      - nodejs15-mysql-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs15-app
    container_name: nodejs15-app
    #restart: unless-stopped
    ports:
      - "4000:3000"
    networks:
      - nodejs15-mysql-network
    depends_on:
      mysql-server:
        condition: service_healthy
      redis-server:
        condition: service_healthy
    #healthcheck:
    #  test: ["CMD", "curl", "localhost"]
    #  interval: 5s
    #  timeout: 5s
    #  retries: 3
    #  start_interval: 5s

volumes:
  vol-nodejs15-mysql:
    name: vol-nodejs15-mysql

networks:
  nodejs15-mysql-network:
    name: nodejs15-mysql-network
    driver: bridge
